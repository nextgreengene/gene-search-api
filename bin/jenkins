#!/bin/bash
set -e

source ./bin/common

RED="\033[91m"
GREEN="\033[92m"
YELLOW="\033[93m"
GREY="\033[90m"
PURPLE="\033[95m"
ENDC="\033[0m"

# The service and the release unique identifier
# One BUILD_VERSION can be reused for multiple RELEASE_VERSIONs
BUILD_VERSION=${BUILD_VERSION:=SNAPSHOT}

SERVICE_NAME='supersonic-sessions'

DOCKER_REPO=''
DOCKER_IMAGE="${DOCKER_REPO}/${SERVICE_NAME}"
DOCKER_PROJECT_NAME='suse'

ARTIFACTORY_URL=''

log_debug() {
    printf "${GREY}${1}${ENDC}\n"
}

log_info() {
    printf "${GREEN}${1}${ENDC}\n"
}

log_warn() {
    printf "${YELLOW}${1}${ENDC}\n"
}

log_error() {
    printf "${RED}${1}${ENDC}\n"
}

build_service() {
    log_info "Building service with version ${BUILD_VERSION}"
    ./gradlew -no-build-cache -PbuildVersion=${BUILD_VERSION} clean -x :apitests:clean :bootJar

    log_debug "Logging in to Artifactory as ${ARTIFACTORY_USR}"
    docker login -u ${ARTIFACTORY_USR} -p ${ARTIFACTORY_PSW} ${DOCKER_REPO}

    local image_name="${DOCKER_IMAGE}:${BUILD_VERSION}-SNAPSHOT"
    log_debug "Publishing docker image ${image_name}"
    docker build --no-cache --build-arg BUILD_VERSION=${BUILD_VERSION} -t ${image_name} .
    docker push ${image_name}

    log_debug "Publishing jar file to Artifactory"
    ./gradlew -PbuildVersion=${BUILD_VERSION} -PartifactoryUser=${ARTIFACTORY_USR} -PartifactoryPassword=${ARTIFACTORY_PSW} -PartifactoryUrl=${ARTIFACTORY_URL} artifactoryPublish
}

unit_test() {
    ./gradlew test -x :apitests:test
}

docker_compose_up() {
    docker_compose_down
    COMPOSE_HTTP_TIMEOUT=360 USERID=$(id -u):$(id -g) docker-compose --project-name ${DOCKER_PROJECT_NAME} up -d --build
    docker_wait_until_healthy_or_none 0 180
    docker ps -a
    echo "---output of stopped containers---"
    for container in $(docker ps --filter status=exited -q); do
        echo "${container}"
        docker logs "${container}"
    done
    docker_validate
}

docker_compose_down() {
    docker-compose --project-name ${DOCKER_PROJECT_NAME} down -v || true
    docker-compose --project-name ${DOCKER_PROJECT_NAME} rm --force || true
    docker rm $(docker ps -a -q) -f || true
}

api_test() {
    docker exec ${DOCKER_PROJECT_NAME}_tester_1 ./gradlew clean apiTest
}

resiliency_test() {
    docker exec ${DOCKER_PROJECT_NAME}_tester_1 ./gradlew clean resiliencyTest
}

promote_artifacts() {
    if [ "${BUILD_VERSION}" = "SNAPSHOT" ]; then
        echo "invalid release version 'SNAPSHOT', exit"
        exit 1
    fi

    unset DOCKER_CONFIG
    log_debug "Logging in to Artifactory as ${ARTIFACTORY_USR}"
    docker login -u ${ARTIFACTORY_USR} -p ${ARTIFACTORY_PSW} ${DOCKER_REPO}

    docker tag ${DOCKER_IMAGE}:${BUILD_VERSION}-SNAPSHOT ${DOCKER_IMAGE}:${BUILD_VERSION}
    docker tag ${DOCKER_IMAGE}:${BUILD_VERSION}-SNAPSHOT ${DOCKER_IMAGE}:latest

    log_debug "Publishing docker image ${DOCKER_IMAGE}:${BUILD_VERSION}"
    docker push ${DOCKER_IMAGE}:${BUILD_VERSION}
    log_debug "Publishing docker image ${DOCKER_IMAGE}:latest"
    docker push ${DOCKER_IMAGE}:latest

    curl -X POST -u "${ARTIFACTORY_USR}:${ARTIFACTORY_PSW}" "${ARTIFACTORY_URL}/api/suse/${BUILD_VERSION}?to=l-maven-releases/supersonic-sessions/${BUILD_VERSION}"

    publish_git_tag
}

publish_git_tag() {
    git tag -a -m ${BUILD_VERSION} ${BUILD_VERSION} $(git rev-parse HEAD)
    git push origin refs/tags/${BUILD_VERSION}:refs/tags/${BUILD_VERSION}
}

COMMAND=$1
shift

${COMMAND} $@
